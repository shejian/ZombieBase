apply from: 'versions.gradle'
apply from: 'common_config.gradle'
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

static def appendQuotes(tag) {
    return "\"" + tag + "\""
}

def gitBranchName = 'unknown'
def gitlog = 'unknown'
task getGitBranchName {
    gitlog = 'git log --pretty=format:%h,%cd,%ae -1'.execute().text.trim()
    gitlog.indexOf("commit")
    gitBranchName = 'git status'.execute([], project.rootDir).text.trim()
    gitBranchName = gitBranchName.split("\\n")[0]
    gitBranchName = gitBranchName.split(" ")[2]
    if (gitBranchName.indexOf("/") >= 0) {
        gitBranchName = gitBranchName.split("/")[1]
    }
}

static def getRCDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd HH:mm:ss')
    return formattedDate
}

android {

    defaultConfigw android

    defaultConfig {
        versionCode 16
        versionName "0.00.1.6"

        buildConfigField "String", "GIT_BRANCH", appendQuotes(gitBranchName)
        buildConfigField "String", "GIT_LOG", appendQuotes(gitlog)
        buildConfigField "String", "BUILD_TIME", appendQuotes(getRCDate())
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api deps.kotlin.stdlib
    api deps.support.app_compat
    api deps.support.design
    api deps.support.v4
    api deps.constraint_layout
    api 'com.spinytech.ma:macore:0.2.1'
    api 'com.yanzhenjie:permission:2.0.0-rc11'
    api deps.alibaba.arouter
    kapt deps.alibaba.arouter_compiler
    api deps.cd.retrofit
    kapt deps.cd.retrofit_compiler
    api deps.lifecycle.runtime
    api deps.lifecycle.extensions
    kapt deps.lifecycle.compiler
    kapt deps.kapt.databinding
    kapt deps.room.compiler
    api deps.room.runtime
    api deps.room.guava
    implementation deps.glide.runtime
    kapt deps.glide.compiler
    implementation deps.glide.okhttp3
    api deps.paging
    api deps.matisse

    implementation project(':submoon')
    implementation project(':subearth')

    testImplementation deps.junit
    androidTestImplementation deps.atsl.runner
    androidTestImplementation deps.espresso.core
}
